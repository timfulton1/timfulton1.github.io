---
title: Data Viz Gallery
page-layout: article
lightbox: true
#toc: true
#toc-location: left
---

<br>

### Static Visualizations

<br>

![](assets/plot_aging_100.png){fig-align="center" fig-alt="A scatterplot that displays the number of athletes with sub 10 second performances across ages 18 to 40" group="my-gallery"}

![](assets/ncaa_cross_plot.png){fig-align="center" fig-alt="A scatterplot that displays the team who won the NCAA Cross Country Championshps each year" group="my-gallery"}

![](assets/sub_4_facet_plot.png){fig-align="center" fig-alt="A line chart showing the increase in the number of sub 4 minute milers from each university over time" group="my-gallery"}

![](assets/steps_per_day.png){fig-align="center" fig-alt="Description of the image" group="my-gallery"}

![](assets/sub44_400m_plot.png){fig-align="center" fig-alt="A bar graph showing the count of sub 44 second 400 meter performances for each athlete" group="my-gallery"}


![](assets/steps_heatmap.png){fig-align="center" fig-alt="A heatmap that displays the number of steps walked each day throught the year" group="my-gallery"}

![](assets/endowments.png){fig-align="center" fig-alt="A tree map that displays university endowments" group="my-gallery"}

### Dynamic Visualizations

<br>

```{r}
#| echo: false
#| output: false

library(dplyr)
library(ggplot2)
library(patchwork)
library(forcats)
library(showtext)
library(glue)
library(ggiraph)

```

```{r}
#| echo: false
#| fig-width: 6
#| fig-height: 7

# Load data
speed_duration <- read.csv("data/speed_duration_data.csv")

# Assign colors
color1 = "#edae49"
color2 = "#2e4057"


speed_duration <- speed_duration %>% 
  mutate(tooltip = glue("Athlete: {athlete}\nCritical Speed: {round(critical_speed, 2)} m/s\nD': {round(d_prime)} m"),
         unique_id = critical_speed + d_prime)

# Add font
font_add_google("Roboto")
showtext_auto()


## Render plots
# Scatter plot 
scatter_plot <- speed_duration %>% 
  ggplot(mapping = aes(x = d_prime, y = critical_speed, fill = gender, color = gender, tooltip = tooltip, data_id = (critical_speed + d_prime))) +
  theme_classic(base_size = 12) + 
  theme(
    text = element_text(family = "Roboto"),
    axis.title.x = element_text(face = "bold", margin = margin(t = 15)),
    axis.title.y = element_text(face = "bold", margin = margin(r = 15)),
    axis.text = element_text(color = "black"),
    legend.position = "bottom"
  ) + 
  scale_x_continuous(
    limit = c(70, 315),
    breaks = seq(from = 100, to = 300, by = 100)
  ) + 
  scale_y_continuous(
    limit = c(5.0, 6.5),
    breaks = seq(from = 5, to = 6.5, by = 0.5)
  ) +
  xlab("D' (m)") + 
  ylab("Critical Speed (m/s)") + 
  geom_point_interactive(
    shape = 21,
    alpha = 1, 
    color = "white",
    size = 2.8
  ) +
  scale_fill_manual(values = c(color1, color2)) + 
  scale_color_manual(values = c(color1, color2)) + 
  guides(
    fill = guide_legend(title = NULL, reverse=TRUE),
    color = guide_legend(title = NULL, reverse=TRUE)
  )


# x density plot
density_x <- speed_duration %>% 
  ggplot(mapping = aes(x = d_prime, fill = factor(gender), color = factor(gender))) +
  theme_void() + 
  theme(legend.position = "none") +
  geom_density(
    alpha = 0.8,
    trim = TRUE
  ) +
  scale_x_continuous(
    limit = c(70, 310),
    breaks = seq(from = 100, to = 330, by = 100)
  ) + 
  scale_fill_manual(values = c(color1, color2)) +
  scale_color_manual(values = c(color1, color2))


# y density plot
density_y <- speed_duration %>% 
  ggplot(mapping = aes(x = critical_speed, fill = factor(gender), color = factor(gender))) +
  theme_void() + 
  theme(legend.position = "none") +
  coord_flip() +
  geom_density(
    alpha = 0.8,
    trim = TRUE
  ) +
  scale_x_continuous(
    limit = c(5.0, 6.5),
    breaks = seq(from = 5, to = 6.5, by = 0.5)
  ) +
  scale_fill_manual(values = c(color1, color2)) +
  scale_color_manual(values = c(color1, color2))


# x boxplot 
boxplot_x <- speed_duration %>% 
  ggplot(mapping = aes(x = fct_rev(factor(gender)), y = d_prime, fill = factor(gender), color = factor(gender))) +
  theme_void() +
  coord_flip() +
  geom_boxplot(
    alpha = 0.8,
    width = 0.75, 
    outlier.shape = NA,
    position = "dodge2"
  ) +
  scale_fill_manual(values = c(color1, color2)) +
  scale_color_manual(values = c(color1, color2)) +
  scale_y_continuous(
    limit = c(70, 310),
    breaks = seq(from = 100, to = 300, by = 100)
  ) +
  guides(
    fill = "none", 
    color = "none"
  ) 


# y boxplot 
boxplot_y <- speed_duration %>% 
  ggplot(mapping = aes(x = factor(gender), y = critical_speed, fill = factor(gender), color = factor(gender))) +
  theme_void() +
  geom_boxplot(
    alpha = 0.8,
    width = 0.75, 
    outlier.shape = NA,
    position = "dodge2"
  ) +
  scale_fill_manual(values = c(color1, color2)) +
  scale_color_manual(values = c(color1, color2)) +
  scale_y_continuous(
    limit = c(5.0, 6.5),
    breaks = seq(from = 5, to = 6.5, by = 0.5)
  ) +
  guides(
    fill = "none", 
    color = "none"
  ) 


# Use plotspacer to create grid with an invisible plot
grid_plot <- density_x + plot_spacer() + plot_spacer() + boxplot_x + plot_spacer() + plot_spacer() + scatter_plot + boxplot_y + density_y + plot_layout(ncol = 3, nrow = 3, widths = c(4, 0.5, 1), heights = c(1, 0.5, 4))


# Add title and caption to grid plot
final_plot <- grid_plot + plot_annotation(
  title = "Critical Speed is faster in men than women, but there is\nno sex difference in D'",
  caption = "Data: worldathletics.org; athletes had season best 1500m, 3000m, and 5000m performances of 1,100+ World Athletic\npoints from 2002-2021\nViz: Tim Fulton, PhD",
  theme = theme(
    plot.title = element_text(face = "bold", color = "#070D06", margin = margin(b = 10)),
    plot.caption = element_text(size = 8, face = "italic", hjust = 0, margin = margin(t = 10))
    )
  )

# Render interactive plot
girafe(
  ggobj = final_plot,
  options = list(
    opts_tooltip(use_fill = TRUE, opacity = 0.9),
    opts_hover(css = "stroke:red;stroke-width:1.5px;"),
    opts_toolbar(saveaspng = FALSE)
  )
)

```

<br>

```{r}
#| echo: false
#| fig-width: 6
#| fig-height: 4.2


# Load data
pop_data <- readRDS("data/pop_change.rds")

state_geom <- readRDS("data/state_geom.rds")

# Create static plot
plot_demo <- ggplot(pop_data,  aes(fill = pop_category)) +
  geom_sf_interactive(
    aes(tooltip = tooltip, data_id = NAME),
    color = "white",
    linewidth = 0.1
  ) +
  geom_sf(
    data = state_geom, 
    color = "gray50", 
    fill = NA,
    linewidth = 0.3
  ) +
  scale_fill_manual(values = c("gray", "#8c510a","#bf812d", "#dfc27d","#f6e8c3", "#c7eae5","#80cdc1","#35978f", "#01665e")) +
  scale_x_continuous(expand = expansion(mult = c(0.02, 0.14))) +
  labs(
    title = "U.S. County Population Changes: 2019-2023",
    caption = "Data: U.S. Census Bureau\nViz: Tim Fulton, PhD"
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "white", color = "white"),
    plot.title = element_text(size = 13, face = "bold", hjust = 0.5, margin = margin(b = 2)),
    plot.caption = element_text(size = 7, color = "black", face = "italic", hjust = 0.02),
    legend.title = element_blank(),
    legend.key.size = unit(0.25, "cm"),
    legend.text = element_text(size = 7),
    legend.position = "inside",
    legend.position.inside = c(0.91, 0.32)
  ) +
  guides(fill = guide_legend(reverse = TRUE))

# Render interactive plot
girafe(ggobj = plot_demo) %>%
  girafe_options(
    opts_hover(css = "fill:black;"), 
    opts_toolbar(saveaspng = FALSE)
  ) 


```

